Got it — here’s the **Cursor-ready PRD** for your portfolio redesign, written so Cursor can turn it into actionable tasks and file changes.
This version is concise enough for the tool to parse, but still complete enough to guide coding.

---

## PRD: Portfolio Website Redesign

**Owner:** Deepak N
**Repo/Stack:** Next.js (App Router), TypeScript, Tailwind CSS, MDX, Vercel

---

### 1. Task Overview

**Purpose**
Redesign [laxmideepak-portfolio.vercel.app](https://laxmideepak-portfolio.vercel.app) to improve clarity, credibility, accessibility, and performance using patterns from award-winning websites.

**Goals**

* Communicate skills, impact, and personality in ≤ 5 seconds.
* Showcase 3–4 flagship projects with measurable outcomes.
* Enable quick navigation to work, about, writing, and contact.
* Meet high performance and accessibility standards.

**KPIs**

* **Performance:** LCP ≤ 2.5s, INP ≤ 200ms, CLS ≤ 0.1 (p75 real users)
* **Lighthouse:** ≥ 90 (mobile), ≥ 95 (desktop)
* **A11y/Best/SEO:** ≥ 95
* **Engagement:** ≥ 35% reach a project page; avg time on case study ≥ 90s
* **Conversion:** ≥ 2% click “Email me” or submit contact form

---

### 2. User Stories

* As a **recruiter**, I want to see top projects immediately so I can assess capability quickly.
* As a **hiring manager**, I want concise case studies with KPIs so I can judge impact.
* As a **peer engineer**, I want architecture details and trade-offs to evaluate technical skill.
* As a **mobile visitor**, I want large, easy-to-tap buttons for smooth navigation.
* As the **site owner**, I want to add new projects/posts via MDX without editing code.

---

### 3. Functional Requirements

**Information Architecture**

* Routes: `/`, `/work`, `/work/[slug]`, `/about`, `/writing`, `/writing/[slug]`, `/contact`

**Navigation**

* Sticky header, skip link, visible focus outlines, mobile drawer with 44×44px tap targets, ESC to close, focus trap.

**Pages**

* **Home:** hero + CTAs, featured projects grid, 3-step process strip, testimonials snippet.
* **Work:** filterable grid of ProjectCards.
* **Work detail:** Problem → Approach → Result, KPI callout, architecture diagram, “What I’d do next.”
* **About:** bio, values, skills.
* **Writing:** list + detail with reading progress (CSS scroll-timeline, reduced-motion fallback).
* **Contact:** accessible form with inline validation, honeypot spam trap, API route for submission.

**Components & Design Tokens**

* NavBar, MobileDrawer, SkipLink, Hero, ProjectCard, Tag/Chip, ProcessStrip, Testimonial, MarkdownProse, Footer
* Tokens: type scale, color palette, spacing (8-pt), radius (12–16px)

**Content Model**

* **Projects (MDX):** `title`, `slug`, `date`, `stack[]`, `summary`, `kpi`, `images[]`
* **Posts (MDX):** `title`, `slug`, `date`, `tags[]`, `excerpt`

**SEO & Analytics**

* Metadata API per route; canonical, OG/Twitter cards, sitemap.xml, robots.txt, structured data (Person/Article)
* Analytics: page views, scroll depth, CTA clicks, Web Vitals RUM

**Interactions**

* Scroll-linked reveals for cards; reading progress for posts; all respect `prefers-reduced-motion`.

---

### 4. Non-Functional Requirements

* **Performance:** AVIF/WEBP via `next/image` with `sizes` and `priority` only for hero; `next/font` with subsetting + display swap; minimal 3rd-party scripts.
* **Accessibility:** WCAG 2.2 AA; focus not obscured by sticky headers; target size ≥ 44×44; keyboard navigation.
* **Security:** CSP (no inline scripts), form spam prevention, basic rate limit.
* **Reliability:** Static/ISR pages; serverless contact form; uptime ≥ 99.9%.
* **Maintainability:** TypeScript strict mode, ESLint + Prettier, Playwright smoke tests.

---

### 5. Assumptions & Dependencies

* Content (copy, images, metrics) provided by owner.
* Libraries: Next.js, Tailwind, MDX, Lucide icons, analytics tool (e.g., Umami).

---

### 6. Acceptance Criteria

* Navigation works with keyboard; skip link visible on focus; mobile drawer traps focus and closes on ESC.
* All images have descriptive `alt`.
* Lighthouse scores meet targets in production.
* Axe DevTools shows 0 critical accessibility issues.
* Each featured project has Problem, Approach, Result, and KPI.

---

### 7. Glossary

* **LCP:** Largest Contentful Paint
* **INP:** Interaction to Next Paint
* **CLS:** Cumulative Layout Shift
* **WCAG 2.2 AA:** Accessibility standard
* **ISR:** Incremental Static Regeneration
* **MDX:** Markdown + JSX for content
* **CTA:** Call to Action

---

Do you want me to now **convert this into a Cursor task list** with phased file changes so you can start implementing directly in your repo? That way Cursor will go step-by-step creating Nav, Hero, pages, and MDX integration.
